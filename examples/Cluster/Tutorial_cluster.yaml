scenario:
  name: "Tutorial cluster" # in mosaik so called world
  start_time: '2012-06-01 00:00:00' # ISO 8601 start time of the simulation
  #end_time: '2012-01-01 01:00:00' # duration in seconds 
  end_time: '2012-06-01 02:45:00' # duration in seconds 
  time_resolution: 900 # time step in seconds (optional). Defaults to 15 minutes (900 s)

models: 
- name: CSVload
  type: CSV
  parameters:
    file_path: './examples/Tutorial1/load_data.txt'
    delimiter: ','
    date_format: 'YYYY-MM-DD HH:mm:ss'
  states:
    load:  # incoming energy or power demand per house (kWh) for each time step (15 minutes)
- name: Load1
  type: Load
  # connect:
  #   ip: 145.94.213.75
  #   port: 5123
  parameters:
    houses: 7  # number of houses that determine the total load demand
    output_type: 'power'  # type of output for consumption calculation ('energy' or 'power')
  inputs:
    load: 0  # incoming energy or power demand per house (kWh) for each time step (15 minutes)
  outputs:
    load_dem: # total energy or power consumption for all houses (kWh) over the time step
    consumption: # Current energy or power consumption based on the number of houses and input load (kWh)


- name: CSV_pv
  type: CSV
  parameters:
    file_path: './examples/Tutorial1/pv_data_Rotterdam_NL-15min.txt'
    delimiter: ','
    date_format: 'YYYY-MM-DD HH:mm:ss'
- name: PV1
  type: PV # models can reuse the same type
  parameters:
    m_area: 1.26  # m2
    NOCT: 44  # Celcius
    m_efficiency_stc: 0.198
    G_NOCT: 800  # W/m2
    P_STC: 250  # W
    peak_power: 600  # W
    m_tilt: 14  # degrees
    m_az: 180  # degrees
    cap: 500  # W
    output_type: 'power'
  inputs: 
    G_Gh: null 
    G_Dh: null
    G_Bn: null
    Ta: null
    hs: null
    FF: null
    Az: null
  outputs:
    pv_gen:
    g_aoi:


- name: Battery1
  type: Battery # models can reuse the same type
  parameters:
    max_p: 0.8  # maximum charging power limit (kW)
    min_p: -0.8  # maximum discharging power limit (kW)
    max_energy: 0.8  # maximum energy storage capacity of the battery (kWh)
    charge_efficiency: 90  # efficiency of charging the battery (%)
    discharge_efficiency: 90  # efficiency of discharging the battery (%)
    soc_min: 10  # minimum allowable state of charge for the battery (%)
    soc_max: 90  # maximum allowable state of charge for the battery (%)
  inputs:
    flow2b: 0  # power flow to/from the battery. Positive for charging, negative for discharging (kW)
  outputs:
    p_out: 0  # output power from the battery after discharge/charge decision (Kw)
    p_in: 0  # input power to the battery (kW)
  states:
    mod: 0 # operation mode: 0=no action, 1=charge, -1=discharge
    soc: 10  # state of charge of the battery (%)
    flag: 0  # flag indicating battery status: 1=fully charged, -1=fully discharged, 0=available for control
- name: Bat_LED
  type: LED_connection
  # connect:
  #   ip: 145.94.213.75
  #   port: 5123
  parameters:
    min_speed: 0  # minimum speed for the LED connection (0-100%)
    max_speed: 0.5  # maximum speed for the LED connection (0-100%)
    direction: 0  # direction of the LED connection (0=towards the white connector)
  inputs:
    speed: 0  # speed for the LED connection (0-100%)

- name: Controller1
  type: Controller_T1 # models can reuse the same type
  parameters:
    soc_min: 10  # Minimum state of charge of the battery before discharging stops
    soc_max: 90  # Maximum state of charge of the battery before charging stops
    max_p: 0.8  # Maximum power flow to/from the battery (kW)
    battery_active: True  # flag indicating if the battery is active or not
  inputs:
    wind_gen: 0  # Wind power generation
    pv_gen: 0  # Solar power generation
    load_dem: 0  # Electrical load demand
    soc: 0  # State of charge of the battery
    load_EV: 0  # Electrical vehicle load demand
  outputs:
    flow2b:  # Power flow to/from battery (positive for charging, negative for discharging)
    res_load:  # Residual load after considering the generation and load demand (kW)
    dump:  # Excess power that cannot be stored or used (kW)


connections:
- from: CSVload.load
  to: Load1.load

- from: CSV_pv.G_Gh # start model, pattern: model_name.output_name/input_name
  to: PV1.G_Gh # end model
- from: CSV_pv.G_Dh
  to: PV1.G_Dh
- from: CSV_pv.G_Bn
  to: PV1.G_Bn
- from: CSV_pv.Ta
  to: PV1.Ta
- from: CSV_pv.hs
  to: PV1.hs
- from: CSV_pv.FF
  to: PV1.FF
- from: CSV_pv.Az
  to: PV1.Az

- from: PV1.pv_gen
  to: Controller1.pv_gen
- from: Load1.load_dem
  to: Controller1.load_dem
- from: Battery1.soc
  to: Controller1.soc


- from: Controller1.flow2b
  to: Battery1.flow2b
  time_shifted: True
- from: Controller1.flow2b
  to: Bat_LED.speed


monitor:
  file: './out_Tutorial_cluster.csv'
  items:
    - Load1.load_dem
scenario:
  name: "Tutorial 1" # in mosaik so called world
  start_time: '2012-01-01 00:00:00' # ISO 8601 start time of the simulation
  #end_time: '2012-01-01 01:00:00' # duration in seconds 
  end_time: '2012-01-01 23:45:00' # duration in seconds 
  time_resolution: 900 # time step in seconds (optional). Defaults to 15 minutes (900 s)

models: 
- name: CSV_EV_presence
  type: CSV
  parameters:
    file_path: './examples/Tutorial4/ev_presence.csv'
    delimiter: ','
    date_format: 'YYYY-MM-DD HH:mm:ss'

- name: CSVload
  type: CSV
  parameters:
    file_path: './examples/Tutorial1/load_data.txt'
    delimiter: ','
    date_format: 'YYYY-MM-DD HH:mm:ss'

- name: CSV_pv
  type: CSV
  parameters:
    file_path: './examples/Tutorial1/pv_data_Rotterdam_NL-15min.txt'
    delimiter: ','
    date_format: 'YYYY-MM-DD HH:mm:ss'

- name: CSV_wind
  type: CSV
  parameters:
    file_path: './examples/Tutorial1/winddata_NL.txt'
    delimiter: ','
    date_format: 'YYYY-MM-DD HH:mm:ss'

- name: EV1
  type: EV
  parameters:
    end_initial_phase: 2    
    end_mid_phase: 80         
    max_power: 11             
    battery_cap: 60           
    fast: False              
    start_charge: 32        
  inputs:
    load_in: 0   
    presence: 0                
  outputs:
    demand: 0                   
  states:
    soc: 0                       
    desired_soc: 100    
- name: EV2
  type: EV
  parameters:
    end_initial_phase: 2    
    end_mid_phase: 80         
    max_power: 11             
    battery_cap: 60           
    fast: False              
    start_charge: 32        
  inputs:
    load_in: 0   
    presence: 0                
  outputs:
    demand: 0                   
  states:
    soc: 0                       
    desired_soc: 100  
- name: EV3
  type: EV
  parameters:
    end_initial_phase: 2    
    end_mid_phase: 80         
    max_power: 11             
    battery_cap: 60           
    fast: False              
    start_charge: 32        
  inputs:
    load_in: 0   
    presence: 0                
  outputs:
    demand: 0                   
  states:
    soc: 0                       
    desired_soc: 100  
- name: EV4
  type: EV
  parameters:
    end_initial_phase: 2    
    end_mid_phase: 80         
    max_power: 11             
    battery_cap: 60           
    fast: False              
    start_charge: 32        
  inputs:
    load_in: 0   
    presence: 0                
  outputs:
    demand: 0                   
  states:
    soc: 0                       
    desired_soc: 100  
- name: EV5
  type: EV
  parameters:
    end_initial_phase: 2    
    end_mid_phase: 80         
    max_power: 11             
    battery_cap: 60           
    fast: False              
    start_charge: 32        
  inputs:
    load_in: 0   
    presence: 0                
  outputs:
    demand: 0                   
  states:
    soc: 0                       
    desired_soc: 100            
                    

- name: Load1
  type: Load
  parameters:
    houses: 1  # number of houses that determine the total load demand
    output_type: 'energy'  # type of output for consumption calculation ('energy' or 'power')
  inputs:
    load: 0  # incoming energy or power demand per house (kWh) for each time step (15 minutes)
  outputs:
    load_dem:  # total energy or power consumption for all houses (kWh) over the time step
    consumption:  # Current energy or power consumption based on the number of houses and input load (kWh)

# - name: Load2
#   type: Load
#   parameters:
#     houses: 5  # number of houses that determine the total load demand
#     output_type: 'power'  # type of output for consumption calculation ('energy' or 'power')
#   inputs:
#     load: 0  # incoming energy or power demand per house (kWh) for each time step (15 minutes)
#   outputs:
#     load_dem:  # total energy or power consumption for all houses (kWh) over the time step
#     consumption:  # Current energy or power consumption based on the number of houses and input load (kWh)

- name: PV1
  type: PV # models can reuse the same type
  parameters:
    m_area: 4  # m2
    NOCT: 44  # Celcius
    m_efficiency_stc: 0.198
    G_NOCT: 800  # W/m2
    P_STC: 250  # W
    peak_power: 600  # W
    m_tilt: 14  # degrees
    m_az: 180  # degrees
    cap: 500  # W
    output_type: 'power'
  inputs: 
    G_Gh: null 
    G_Dh: null
    G_Bn: null
    Ta: null
    hs: null
    FF: null
    Az: null
  outputs:
    pv_gen:
    g_aoi:

- name: Wind1
  type: Wind # models can reuse the same type
  parameters:
    p_rated: 0.3  # Rated power output (kW) of the wind turbine at the rated wind speed and above.
    u_rated: 10.3  # Rated wind speed (m/s) where the wind turbine reaches its maximum power output.
    u_cutin: 2.8  # Cut-in wind speed (m/s) below which the wind turbine does not generate power.
    u_cutout: 25  # Cut-out wind speed (m/s) above which the wind turbine stops generating power to prevent damage.
    cp: 0.40  # Coefficient of performance of the wind turbine, typically around 0.40 and never more than 0.59.
    diameter: 2  # Diameter of the wind turbine rotor (m), used in calculating the swept area for wind power production.
    output_type: 'power'  # Output type of the wind generation, either 'power' (kW) or 'energy' (kWh).
  inputs:
    u: 0  # Wind speed (m/s) at a specific height used to calculate the wind power generation.
  outputs:
    wind_gen:  # Generated wind power output (kW) or energy (kWh) based on the chosen output type (power or energy).
    u:  # Adjusted wind speed (m/s) at 25m height after converting from the original height (e.g., 100m or 60m).
  states:
    u60: 0  # Wind speed at 60m height (m/s) used to calculate the wind power generation.

- name: Battery1
  type: Battery # models can reuse the same type
  parameters:
    max_p: 0.8  # maximum chkWrging power limit (kW)
    min_p: -0.8  # maximum discharging power limit (kW)
    max_energy: 10  # maximum energy storage capacity of the battery (kWh)
    charge_efficiency: 90  # efficiency of charging the battery (%)
    discharge_efficiency: 90  # efficiency of discharging the battery (%)
    soc_min: 10  # minimum allowable state of charge for the battery (%)
    soc_max: 90  # maximum allowable state of charge for the battery (%)
  inputs:
    flow2b: 0  # power flow to/from the battery. Positive for charging, negative for discharging (kW)
  outputs:
    p_out: 0  # output power from the battery after discharge/charge decision (Kw)
    p_in: 0  # input power to the battery (kW)
  states:
    mod: 0 # operation mode: 0=no action, 1=charge, -1=discharge
    soc: 10  # state of charge of the battery (%)
    flag: 0  # flag indicating battery status: 1=fully charged, -1=fully discharged, 0=available for control

- name: Controller1
  type: ControllerEV # models can reuse the same type
  parameters:
    soc_min: 10  # Minimum state of charge of the battery before discharging stops
    soc_max: 90  # Maximum state of charge of the battery before charging stops
    max_p: 0.8  # Maximum power flow to/from the battery (kW)
  inputs:
    wind_gen: 0  # Wind power generation
    pv_gen: 0  # Solar power generation
    load_dem: 0  # Electrical load demand
    soc: 0  # State of charge of the battery
    load_EV: 0  # Electrical vehicle load demand
  outputs:
    flow2b:  # Power flow to/from battery (positive for charging, negative for discharging)
    res_load:  # Residual load after considering the generation and load demand (kW)
    dump:  # Excess power that cannot be stored or used (kW)


connections:
- from: CSVload.load
  to: Load1.load
# - from: CSVload.load
#   to: Load2.load
- from: EV1.demand
  to: Controller1.load_EV
- from: EV2.demand
  to: Controller1.load_EV
- from: EV3.demand
  to: Controller1.load_EV
- from: EV4.demand
  to: Controller1.load_EV
- from: EV5.demand
  to: Controller1.load_EV
- from: CSV_EV_presence.ev1
  to: EV1.presence
- from: CSV_EV_presence.ev2
  to: EV2.presence
- from: CSV_EV_presence.ev3
  to: EV3.presence
- from: CSV_EV_presence.ev4
  to: EV4.presence
- from: CSV_EV_presence.ev5
  to: EV5.presence

- from: CSV_pv.G_Gh # start model, pattern: model_name.output_name/input_name
  to: PV1.G_Gh # end model
- from: CSV_pv.G_Dh
  to: PV1.G_Dh
- from: CSV_pv.G_Bn
  to: PV1.G_Bn
- from: CSV_pv.Ta
  to: PV1.Ta
- from: CSV_pv.hs
  to: PV1.hs
- from: CSV_pv.FF
  to: PV1.FF
- from: CSV_pv.Az
  to: PV1.Az

- from: CSV_wind.u
  to: Wind1.u

- from: Wind1.wind_gen
  to: Controller1.wind_gen


- from: PV1.pv_gen
  to: Controller1.pv_gen
- from: Load1.load_dem
  to: Controller1.load_dem
# - from: Load2.load_dem
#   to: Controller1.load_dem
- from: Battery1.soc
  to: Controller1.soc

- from: Controller1.flow2b
  to: Battery1.flow2b
  time_shifted: True

monitor:
  file: './examples/Tutorial4/out.csv'
  items:
    #- CSV_pv.G_Gh
    # - Controller1.dump
    # - PV1.pv_gen
    # - Wind1.wind_gen
    # - Load1.load_dem

    - Controller1.flow2b
    - Controller1.res_load
    - Controller1.dump
    - EV1.soc
    - CSV_EV_presence.ev1
    - CSV_EV_presence.ev2
    - CSV_EV_presence.ev3
    - CSV_EV_presence.ev4
    - CSV_EV_presence.ev5
    # - Battery1.soc
